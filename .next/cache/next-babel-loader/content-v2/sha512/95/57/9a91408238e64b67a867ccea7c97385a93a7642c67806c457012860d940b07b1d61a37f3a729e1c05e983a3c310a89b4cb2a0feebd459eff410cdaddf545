{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { nanoid } from \"nanoid\";\nimport Todo from './Todo';\nimport Form from './Form';\nimport styles from './styles.module.css';\n\nfunction TodoList(props) {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState(props.tasks);\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsx(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    deleteTask: deleteTask\n  }, task.key));\n\n  function addTask(name) {\n    alert(name);\n  }\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      className: styles.taskStatus,\n      children: headingText\n    }), /*#__PURE__*/_jsx(\"ul\", {\n      role: \"list\",\n      className: styles.taskList,\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }), /*#__PURE__*/_jsx(Form, {\n      addTask: addTask\n    })]\n  });\n}\n\nexport default TodoList;","map":null,"metadata":{},"sourceType":"module"}